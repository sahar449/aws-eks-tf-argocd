# =====================================
# 1. AWS Load Balancer Controller
# =====================================
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: aws-load-balancer-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"   # Ensures this app is deployed before any apps depending on the ALB Ingress Controllers
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://aws.github.io/eks-charts
    chart: aws-load-balancer-controller
    targetRevision: 1.7.0
    helm:
      values: |
        clusterName: eksdemo-cluster
        region: us-west-2
        vpcId: vpc-0c0b5883516a4d2f0
        serviceAccount:
          create: true
          name: aws-load-balancer-controller
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::634647866665:role/eks-lb-controller-role-49kgdpkf
          cleanupOnDelete: true   # <--- this ensures ALB + listeners + SGs are deleted
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true # allows ArgoCD to successfully sync even if the chart produces no resources
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true # ensures pruning of resources happens after all new resources are created
      - PrunePropagationPolicy=foreground # deletes dependent resources before deleting the parent resource
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m